name: "go_builder"
mode: "dev"
port: 8888
db-type: "mysql"
version: "v0.0.1"

# jwt configuration
jwt:
  signing-key: q-cloud-ll
  access-expire: 1d
  refresh-expire: 7d
  issuer: q-cloud-ll

cors:
  mode: strict-whitelist
  whitelist:
    - allow-origin: example1.com
      allow-headers: Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id
      allow-methods: POST, GET
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type

      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值

snowflake:
  start_time: "2020-07-01"
  machine_id: 1

log:
  level: "debug"
  filename: "go_builder.log"
  max_size: 200
  max_age: 30
  max_backups: 7

es:
  es_host: 127.0.0.1
  es_port: 9200
  es_index: mylog

jaeger:
  addr: 127.0.0.1:6831
  type: const
  param: 1
  log-spans: true

mysql:
  host: 127.0.0.1
  port: 3306
  user: root
  password: 123456
  dbname: go_builder
  config: charset=utf8mb4&parseTime=true&loc=Local
  log-mode: "debug"
  log-zap: false
  max_idle_conns: 10
  max_open_conns: 100

redis:
  addr: 127.0.0.1:6379
  password: 123456
  db: 0
  pool_size: 100

qiniu-oss:
  enable: oss
  zone: ZoneHuaDong
  bucket: moyuban-oss
  use-https: false
  access-key: uoEZIYY7RWonxPew5VRflm4j-G60tAgFFvs5AoDE
  secret-key: SiAXOWJy2oUjNWxHxKUX12hAVcTM9zooZAfEQPW_
  img-path: rxx2xz5zb.hd-bkt.clouddn.com
  use-cdn-domains: false

# 本地文件上传
local:
  host:
  path:

kafka:
  disableConsumer:
    debug: true
    address: 127.0.0.1:9092
    required-ack: -1 # 发送完数据后是否需要拿多少个副本确认 -1 需要全部
    read-timeout: 30 # 默认30s
    write-timeout: 30 # 默认30s
    max-open-requests: 5  # 在发送阻塞之前，允许有多少个未完成的请求，默认为5
    partition: 2 # 分区生成方案 0根据topic进行hash、1随机、2轮询